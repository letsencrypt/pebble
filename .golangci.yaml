linters-settings:
  gocyclo:
    min-complexity: 25
  govet:
    check-shadowing: false
  misspell:
    locale: "US"

linters:
  disable-all: false
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - copyloopvar
    - decorder
    - dogsled
    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errorlint
    - forcetypeassert
    - ginkgolinter
    - gocheckcompilerdirectives
    - gocognit
    - goconst
    - gocyclo
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosimple
    - govet
    - importas
    - inamedparam
    - ineffassign
    - ireturn
    - loggercheck
    - makezero
    - mirror
    - misspell
    - nakedret
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - perfsprint
    - predeclared
    - reassign
    - revive
    - staticcheck
    - tagalign
    - tenv
    - testableexamples
    - testifylint
    - thelper
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - wastedassign

issues:
  exclude-use-default: true
  max-issues-per-linter: 0
  max-same-issues: 0
  # The following excludes are considered false-positives/known-OK.
  exclude:
    - fmt.Sprintf can be replaced with string
  exclude-rules:
    - path: ca/ca.go
      text: 'type name will be used as ca.CAImpl by other packages, and that stutters; consider calling this Impl'
    - path: va/va.go
      text: 'type name will be used as va.VAImpl by other packages, and that stutters; consider calling this Impl'
    - path: wfe/wfe.go
      text: 'if` block ends with a `return` statement, so drop this `else` and outdent its block'
    - path: va/va.go
      linters:
        - goconst
      text: 'string `Incorrect validation certificate for %s challenge. ` has \d occurrences, make it a constant'
